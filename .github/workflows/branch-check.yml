name: Enforce Dev to Main PRs

on:
  pull_request:
    branches: [ main ]

# Grant necessary permissions for auto-merge
permissions:
  contents: write        # Required to merge PRs
  pull-requests: write   # Required to merge pull requests
  issues: write         # Required to create comments

jobs:
  check-branch:
    name: Check Source Branch
    runs-on: ubuntu-latest
    steps:
      - name: Verify that the PR is from the 'dev' branch
        run: |
          if [[ "${{ github.head_ref }}" == "dev" ]]; then
            echo "‚úÖ PR is from dev. Check passed."
            exit 0
          else
            echo "‚ùå ERROR: Pull requests to main must originate from the 'dev' branch."
            echo "This PR is from '${{ github.head_ref }}'."
            exit 1
          fi

  automerge:
    name: Auto-merge PR
    runs-on: ubuntu-latest
    needs: check-branch
    steps:
      - name: Auto-merge dev‚Üímain PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN || github.token }}
          script: |
            const pr = context.payload.pull_request;
            
            if (pr.draft) {
              console.log('‚è≠Ô∏è Skipping automerge: PR is in draft state');
              return;
            }
            
            console.log('üöÄ Auto-merging dev‚Üímain PR...');
            
            try {
              await github.rest.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
                commit_title: `${pr.title} (#${pr.number}) - Auto-merged`,
                commit_message: `Automatically merged dev to main after branch check passed.\n\nAuthor: @${pr.user.login}`,
                merge_method: 'squash',
              });
              
              console.log('‚úÖ PR successfully auto-merged!');
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: 'ü§ñ Auto-merged after dev‚Üímain branch check passed! ‚úÖ\n\nüöÄ Deployment will begin automatically.',
              });
              
            } catch (error) {
              console.error(`‚ùå Auto-merge failed: ${error.message}`);
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: `‚ùå Auto-merge failed: ${error.message}\n\nPlease merge manually.`,
              });
            } 
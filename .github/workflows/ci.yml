name: CI

on:
  pull_request:
    branches: [ dev ]

jobs:

  lint_and_format:
    name: Lint and Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache Flutter dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            .dart_tool
          key: ${{ runner.os }}-flutter-deps-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-flutter-deps-

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.5'
          channel: 'stable'
          cache: true

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Check formatting
        run: dart format --output=none --set-exit-if-changed .

  analyze:
    name: Analyze Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache Flutter dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            .dart_tool
          key: ${{ runner.os }}-flutter-deps-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-flutter-deps-

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.5'
          channel: 'stable'
          cache: true

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Create .env file for analyzer
        run: touch .env

      - name: Get changed Dart files
        id: dart-changes
        uses: tj-actions/changed-files@v39
        with:
          files: |
            **/*.dart

      - name: Analyze changed files only (faster)
        if: steps.dart-changes.outputs.any_changed == 'true'
        run: |
          echo "🔍 Analyzing only changed Dart files for faster feedback..."
          
          # Analyze only changed files
          changed_files="${{ steps.dart-changes.outputs.all_changed_files }}"
          for file in $changed_files; do
            echo "  Analyzing: $file"
            flutter analyze --fatal-infos --fatal-warnings "$file" || exit 1
          done
          
          echo "✅ Incremental analysis complete!"

      - name: Skip analysis (no Dart changes)
        if: steps.dart-changes.outputs.any_changed == 'false'
        run: |
          echo "⏭️ Skipping analysis - no Dart files changed"
          echo "✅ Analysis step completed (skipped)"

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache Flutter dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            .dart_tool
          key: ${{ runner.os }}-flutter-deps-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-flutter-deps-

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.5'
          channel: 'stable'
          cache: true

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Create .env file for tests
        run: touch .env

      - name: Get changed Dart files
        id: dart-changes
        uses: tj-actions/changed-files@v39
        with:
          files: |
            **/*.dart

      - name: Run unit and widget tests
        if: steps.dart-changes.outputs.any_changed == 'true'
        run: flutter test --concurrency=4

      - name: Skip tests (no Dart changes)
        if: steps.dart-changes.outputs.any_changed == 'false'
        run: |
          echo "⏭️ Skipping tests - no Dart files changed"
          echo "✅ Test step completed (skipped)"

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint_and_format, analyze, test]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache Flutter dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            .dart_tool
          key: ${{ runner.os }}-flutter-deps-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-flutter-deps-

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.5'
          channel: 'stable'
          cache: true

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Create .env file
        if: github.event.pull_request.head.repo.full_name == github.repository
        run: echo "${{ secrets.DOTENV }}" > .env

      - name: Create empty .env file for forks
        if: github.event.pull_request.head.repo.full_name != github.repository
        run: touch .env

      - name: Cache build artifacts
        id: build-cache
        uses: actions/cache@v4
        with:
          path: |
            build/
            .dart_tool/build/
          key: build-${{ hashFiles('pubspec.lock') }}-${{ hashFiles('lib/**', 'assets/**', 'analysis_options.yaml') }}-${{ runner.os }}
          restore-keys: |
            build-${{ hashFiles('pubspec.lock') }}-${{ runner.os }}-
            build-${{ runner.os }}-

      - name: Build from cache (if available)
        if: steps.build-cache.outputs.cache-hit == 'true'
        run: |
          echo "✅ Build artifacts restored from cache!"
          echo "📦 Skipping build - no relevant changes detected"
          ls -la build/ || echo "Build directory structure:"

      - name: Build from source (cache miss)
        if: steps.build-cache.outputs.cache-hit != 'true'
        run: |
          echo "🔨 Building from source..."
          flutter build bundle
          echo "✅ Build complete - artifacts cached for future runs" 
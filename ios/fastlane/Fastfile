# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

# Load environment variables from .env file
require 'dotenv/load'
dotenv_path = File.join(__dir__, "..", "..", ".env")
Dotenv.load(dotenv_path) if File.exist?(dotenv_path)

# Check if environment variables are set
required_env_vars = ["APP_STORE_CONNECT_API_KEY_ID", "APP_STORE_CONNECT_ISSUER_ID", "APP_STORE_CONNECT_API_KEY_BASE64", "BUNDLE_ID"]
required_env_vars.each do |var|
  UI.user_error!("Missing required environment variable: #{var}") unless ENV[var]
end

default_platform(:ios)

platform :ios do
  desc "Build and upload a new version to the App Store and TestFlight"
  lane :deploy do
    # Set up App Store Connect API Key
    api_key = {
      key_id: ENV["APP_STORE_CONNECT_API_KEY_ID"],
      issuer_id: ENV["APP_STORE_CONNECT_ISSUER_ID"],
      key: Base64.decode64(ENV["APP_STORE_CONNECT_API_KEY_BASE64"])
    }

    # Best practice: Fetch the latest build number from TestFlight and increment it.
    # This avoids storing the build number in the repo and prevents conflicts.
    # The marketing version (e.g., 1.0.1) should be updated manually by developers.

    # Use app_store_build_number instead of latest_testflight_build_number
    latest_build_number = app_store_build_number(
      app_identifier: ENV["BUNDLE_ID"],
      api_key: api_key,
      live: false  # Get build number from TestFlight, not App Store
    )
    new_build_number = latest_build_number + 1

    # Build the Flutter app, injecting the new build number.
    sh "flutter", "build", "ipa", "--release", "--build-number=#{new_build_number}", "--export-options-plist=./fastlane/ExportOptions.plist"

    # Upload to TestFlight.
    upload_to_testflight(
      ipa: "../build/ios/ipa/xceleration.ipa",
      api_key: api_key,
      skip_waiting_for_build_processing: true,
      distribute_external: false,  # Keep this false for internal testing only
      notify_external_testers: false,  # Not needed for internal testing
      groups: ["XCeleration prototype"],  # internal group
      changelog: "Latest updates and bug fixes"  # Optional but recommended
    )
  end
end
